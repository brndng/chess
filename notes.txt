heroku run printenv | sort
DYNO=run.8515
HOME=/app
MEMORY_AVAILABLE=512
NODE_ENV=production
NODE_HOME=/app/.heroku/node
NPM_CONFIG_PRODUCTION=false
PATH=/app/.heroku/node/bin:/app/.heroku/yarn/bin:/usr/local/bin:/usr/bin:/bin:/app/bin:/app/node_modules/.bin
PORT=57410
PS1=\[\033[01;34m\]\w\[\033[00m\] \[\033[01;32m\]$ \[\033[00m\]
PWD=/app
SHLVL=1
TERM=xterm-256color
WEB_CONCURRENCY=1
WEB_MEMORY=512









#Bugs
resign first game, try resigning next game, accept doesn't work - backend socket emit does not hit handler
resign first game, next game offer draw (drawOfferedBy !== opponent), response doesn't come back
  -declined: nothing
  -accepted: 401 "Cannot GET /games/draw/accept" ...its a PUT?!

# instructions to run locally
cd api, npm start
cd ui, cd client, npm run build
cd ui, cd server, nodemon

// checker in back to prevent user from making illegal moves for self
// if (isLegalMove(...req.body)) {

      // }
//specific checkers on:
move x
  (userId === game.white && whiteToMove )||
  (userId === game.black && !whiteToMove )
resign ...either player in record 
accept draw only other player in record x


1. cd ui // cd client // npm run build

2. cd api // npm start


(2. cd ui // cd server // nodemon)


ui/server/index.js
const express = require('express');
const path = require('path');

const app = express();
const PORT = 8080;

app.use(express.static(path.join(__dirname, '../client/dist')));

app.get('*', (req, res) => res.sendFile(path.resolve(__dirname, '../client/dist/index.html')));

app.listen(PORT, () => console.log(`serving static files on port: ${PORT}`));

api/socket-server/index.js
const express = require('express');
const socket = require('socket.io');
const parser = require('body-parser');
const cors = require('cors');
const helmet = require('helmet');
// const path = require('path');

const app = express();
const PORT = 1337;
const server = app.listen(PORT, () => console.log(`listening on port: ${PORT}`));
const io = socket(server);

const middleware = [
  helmet(),
  parser.json(),
  parser.urlencoded({ extended: true }),
  cors({
    allowedHeaders: 'Content-Type, authorization',
    methods: ['GET, POST, PUT, DELETE', 'OPTIONS'],
  }),
];

io.on('connection', (socket) => {
  console.log('made SOCKET connection!', socket.id);

  socket.on('game_id', (data) => {
    socket.join(data);
    io.sockets.in(data).emit('guest', data);
  });

  socket.on('chat', (data) => {
    io.sockets.in(data.id).emit('chat', data.message);
  });

  socket.on('move', (data) => {
    socket.broadcast.to(data.id).emit('move', data.newMove);
  });

  socket.on('check', (data) => {
    io.sockets.in(data.id).emit('check', data.userId);
  });

  socket.on('resign', (data) => {  
    io.sockets.in(data.id).emit('resign', data.user);
  });

  socket.on('checkmate', (data) => {
    io.sockets.in(data.id).emit('checkmate', data.userId);
  });

  socket.on('draw_offer', (data) => {
    socket.broadcast.to(data.id).emit('draw_offer', data.userId);
  });

  socket.on('draw_accept', (data) => {
    socket.broadcast.to(data.id).emit('draw_accept', data.userId);
  });

  socket.on('draw_decline', (data) => {
    socket.broadcast.to(data.id).emit('draw_decline', data.userId);
  });
});

app.use(...middleware);

api script package.json
    // "start": "npm-run-all -p server",

ui script package.json
  "start": "webpack-dev-server --config ./webpack.config.js --mode development",

