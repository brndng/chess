hashes showing on db players fetch x
isLoading while fetching players...currently show "user doesn't exist" view
media queries for smaller screens
search is caps specific
on enter send message
auth check for joining room
differentiation between login and signup
validators for login/signup: no empty strings
remove empty string user from database
redirect after sign up
no stored credentials after sign up
highlight hovered row on games list
notification on new game created
notification on new chat

Signup

More visual separation between the Login and Signup – even just a header will do to start, but they're too similar right now.
Error colors on invalid form submission. doesn't need to be red, but shouldn't be grey / the same colors as the default state
Signup should trigger a session after completion, and automatically bring the user to their dashboard
Dashboard / Logged-in Home

Try to pull in common actions and feature CTAs into the landing experience, as a dashbard. Especially a page that might be empty at times, like the Current Games, is ripe for presenting in a conditionally-included module as opposed to a full view.
As a new user, I should know what i have available to me in your app once i log in, without having to click around. Bonus points if you can discern new from returning players, and provide a "hey, welcome! here's an overview of the app" kind of experience to new users, but not to existing / experienced users. Or a "close this, i don't need it anymore" option for players to self-select into "experienced".
As an experienced user, i should be able to accomplish most common actions from the dashboard without secondary pages. Match history / archive is fine to be secondary, since assuming that most of their time will be spent setting up and playing games is probably a pretty safe one. Starting up matches and resuming matches are pretty core, so they should be available as soon as the user logs in.
User Lookup

A friends list feature would be nice here, to shortcut search
Autocomplete / predictive results – filter the list as you type rather than requiring a submitted form. Assuming they'll review your code, might be worth having a healthy debounce and / or using something like Solr to index your search.
New Game Creation

Since there are only three options for the color selection, convert it to more of a radio-button form style using the icons you have in the dropdown as the prominent click. It has a lower cognitive load that way, for a very common task for an active user.
Consider also showing the options in a sequence, only when it's most useful. "Who?" [click] "Color?" [click] "Submit Challenge?" [click].
General

Form submissions on Enter – Login, Signup, sending Chats, submitting searches, etc – shouldn't have to include clicks.
Active UI Color – pick a brighter accent color to indicate the parts of the UI you want the user to interact with, so that they can build an association with it. A user should be able to quickly scan a page and see the (most important) actions they can perform by looking for that color. It can also be used to differentiate between disable and active state, like when "Challenge" is available after a user and color were chosen.
Bugs
No trim() or enforcement of username length on the signup – I created a user who's username is a blank space

smothered mate bug

onEnter login
player left notification
'visualizer'
leave button

BUG:
click landing page, come back, turn doesn't persist --CDUnmount, persist proper game data
simul chat chops off message
my turn, opponent leaves, I move, turn toggles, opponent comes back, sees still my turn
--click to another game, come back, proper turn loads

Cannot destructure property `origin` of 'undefined' or 'null'.
    at willMoveExposeKing (/Users/Brian/Desktop/Projects/chess-club/rules/interactions/index.js:51:29)

refactor locateKing from iterating currentPosition to squares...breaks, 
verifyLegalSq cant read col of undefined, possibly from:
Game->Square->getCandididateSquares->verifyLegalSquare
but what does this have to do with currentPosition -> squares?
don't have squares in time?...only after Sq. component mounts do I have it

bug
white checks black
black users candidateSquares (white pieces) !== white users candidateSquares (white pieces)
should ===
willMoveExposeKing...white's attacking piece 'exposes' black king
should only be black users own pieces that 'expose' his king
refactor will move expose king so that it only deals with user's pieces exposing own king


API_URL

make it clear that game has ended
chat number
auto scroll


